{"version":3,"file":"socket.io.esm.min.js","sources":["../node_modules/engine.io-parser/build/esm/commons.js","../node_modules/engine.io-parser/build/esm/encodePacket.browser.js","../node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","../node_modules/engine.io-parser/build/esm/decodePacket.browser.js","../node_modules/engine.io-parser/build/esm/index.js","../node_modules/@socket.io/component-emitter/index.mjs","../node_modules/engine.io-client/build/esm/globalThis.browser.js","../node_modules/engine.io-client/build/esm/util.js","../node_modules/engine.io-client/build/esm/transport.js","../node_modules/engine.io-client/build/esm/contrib/yeast.js","../node_modules/engine.io-client/build/esm/contrib/parseqs.js","../node_modules/engine.io-client/build/esm/contrib/has-cors.js","../node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js","../node_modules/engine.io-client/build/esm/transports/polling.js","../node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js","../node_modules/engine.io-client/build/esm/transports/websocket.js","../node_modules/engine.io-client/build/esm/transports/index.js","../node_modules/engine.io-client/build/esm/contrib/parseuri.js","../node_modules/engine.io-client/build/esm/socket.js","../node_modules/ms/index.js","../node_modules/debug/src/common.js","../node_modules/debug/src/browser.js","../build/esm/url.js","../node_modules/socket.io-parser/build/esm/is-binary.js","../node_modules/socket.io-parser/build/esm/binary.js","../node_modules/socket.io-parser/build/esm/index.js","../build/esm/on.js","../build/esm/socket.js","../build/esm/contrib/backo2.js","../build/esm/manager.js","../build/esm/index.js"],"sourcesContent":["const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + content);\n    };\n    return fileReader.readAsDataURL(data);\n};\nexport default encodePacket;\n","const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            return data instanceof ArrayBuffer ? new Blob([data]) : data;\n        case \"arraybuffer\":\n        default:\n            return data; // assuming the data is already an ArrayBuffer\n    }\n};\nexport default decodePacket;\n","import encodePacket from \"./encodePacket.js\";\nimport decodePacket from \"./decodePacket.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload };\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","import { globalThisShim as globalThis } from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nclass TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} options.\n     * @api private\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.readyState = \"\";\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @api protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     *\n     * @api public\n     */\n    open() {\n        if (\"closed\" === this.readyState || \"\" === this.readyState) {\n            this.readyState = \"opening\";\n            this.doOpen();\n        }\n        return this;\n    }\n    /**\n     * Closes the transport.\n     *\n     * @api public\n     */\n    close() {\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     * @api public\n     */\n    send(packets) {\n        if (\"open\" === this.readyState) {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @api protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @api protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @api protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @api protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n}\n","// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","// browser shim for xmlhttprequest module\nimport { hasCORS } from \"../contrib/has-cors.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nexport function XHR(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nimport { XHR as XMLHttpRequest } from \"./xmlhttprequest.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false\n    });\n    return null != xhr.responseType;\n})();\nexport class Polling extends Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n            this.xs = opts.secure !== isSSL;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    /**\n     * Transport name.\n     */\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @api private\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} callback upon buffers are flushed and transport is paused\n     * @api private\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @api public\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @api private\n     */\n    onData(data) {\n        const callback = packet => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @api private\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} data packets\n     * @param {Function} drain callback\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, data => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        let port = \"\";\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"https\" === schema && Number(this.opts.port) !== 443) ||\n                (\"http\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @api private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @api private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @api private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @api public\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.async = false !== opts.async;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @api private\n     */\n    create() {\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        opts.xscheme = !!this.opts.xs;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, this.async);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @api private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @api private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @api private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @api public\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import { globalThisShim as globalThis } from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return cb => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { defaultBinaryType, nextTick, usingBrowserWebSocket, WebSocket } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @api {Object} connection options\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Transport name.\n     *\n     * @api public\n     */\n    get name() {\n        return \"websocket\";\n    }\n    /**\n     * Opens socket.\n     *\n     * @api private\n     */\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @api private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = closeEvent => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent\n        });\n        this.ws.onmessage = ev => this.onData(ev.data);\n        this.ws.onerror = e => this.onError(\"websocket error\", e);\n    }\n    /**\n     * Writes data to socket.\n     *\n     * @param {Array} array of packets.\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, data => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    /**\n     * Closes socket.\n     *\n     * @api private\n     */\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        let port = \"\";\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"wss\" === schema && Number(this.opts.port) !== 443) ||\n                (\"ws\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @api public\n     */\n    check() {\n        return !!WebSocket;\n    }\n}\n","import { Polling } from \"./polling.js\";\nimport { WS } from \"./websocket.js\";\nexport const transports = {\n    websocket: WS,\n    polling: Polling\n};\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses an URI\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri or options\n     * @param {Object} opts - options\n     * @api public\n     */\n    constructor(uri, opts = {}) {\n        super();\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parse(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\"polling\", \"websocket\"];\n        this.readyState = \"\";\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024\n            },\n            transportOptions: {},\n            closeOnBeforeunload: true\n        }, opts);\n        this.opts.path = this.opts.path.replace(/\\/$/, \"\") + \"/\";\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this.beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\"\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} transport name\n     * @return {Transport}\n     * @api private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts.transportOptions[name], this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port\n        });\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @api private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @api private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", reason => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} transport name\n     * @api private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", msg => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = err => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        transport.open();\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @api private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState &&\n            this.opts.upgrade &&\n            this.transport.pause) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @api private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.resetPingTimeout();\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @api private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @api private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @api private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @api private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} message.\n     * @param {Function} callback function.\n     * @param {Object} options.\n     * @return {Socket} for chaining.\n     * @api public\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @api private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     *\n     * @api public\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @api private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @api private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} server upgrades\n     * @api private\n     *\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.slice(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n","import { parse } from \"engine.io-client\";\nimport debugModule from \"debug\"; // debug()\nconst debug = debugModule(\"socket.io-client:url\"); // debug()\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            debug(\"protocol-less url %s\", uri);\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        debug(\"parse %s\", uri);\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    packet.attachments = undefined; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                obj.type =\n                    obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK;\n                return this.encodeAsBinary(obj);\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            if (packet.type === PacketType.BINARY_EVENT ||\n                packet.type === PacketType.BINARY_ACK) {\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return typeof payload === \"object\";\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || typeof payload === \"object\";\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return Array.isArray(payload) && payload.length > 0;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nimport debugModule from \"debug\"; // debug()\nconst debug = debugModule(\"socket.io-client:socket\"); // debug()\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\n/**\n * A Socket is the fundamental class for interacting with the server.\n *\n * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.\n *\n * @example\n * const socket = io();\n *\n * socket.on(\"connect\", () => {\n *   console.log(\"connected\");\n * });\n *\n * // send an event to the server\n * socket.emit(\"foo\", \"bar\");\n *\n * socket.on(\"foobar\", () => {\n *   // an event was received from the server\n * });\n *\n * // upon disconnection\n * socket.on(\"disconnect\", (reason) => {\n *   console.log(`disconnected due to ${reason}`);\n * });\n */\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     */\n    constructor(io, nsp, opts) {\n        super();\n        /**\n         * Whether the socket is currently connected to the server.\n         *\n         * @example\n         * const socket = io();\n         *\n         * socket.on(\"connect\", () => {\n         *   console.log(socket.connected); // true\n         * });\n         *\n         * socket.on(\"disconnect\", () => {\n         *   console.log(socket.connected); // false\n         * });\n         */\n        this.connected = false;\n        /**\n         * Buffer for packets received before the CONNECT packet\n         */\n        this.receiveBuffer = [];\n        /**\n         * Buffer for packets that will be sent once the socket is connected\n         */\n        this.sendBuffer = [];\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"connect\", () => {\n     *   console.log(socket.disconnected); // false\n     * });\n     *\n     * socket.on(\"disconnect\", () => {\n     *   console.log(socket.disconnected); // true\n     * });\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects.\n     *\n     * @example\n     * const socket = io();\n     *\n     * console.log(socket.active); // true\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   if (reason === \"io server disconnect\") {\n     *     // the disconnection was initiated by the server, you need to manually reconnect\n     *     console.log(socket.active); // false\n     *   }\n     *   // else the socket will automatically try to reconnect\n     *   console.log(socket.active); // true\n     * });\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @example\n     * const socket = io({\n     *   autoConnect: false\n     * });\n     *\n     * socket.connect();\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for {@link connect()}.\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * socket.send(\"hello\");\n     *\n     * // this is equivalent to\n     * socket.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @example\n     * socket.emit(\"hello\", \"world\");\n     *\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\n     * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\n     *\n     * // with an acknowledgement from the server\n     * socket.emit(\"hello\", \"world\", (val) => {\n     *   // ...\n     * });\n     *\n     * @return self\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            debug(\"emitting packet with ack id %d\", id);\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n            debug(\"discard packet as the transport is not currently writable\");\n        }\n        else if (this.connected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        const timeout = this.flags.timeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    debug(\"removing packet with ack id %d from the buffer\", id);\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            debug(\"event with ack id %d has timed out after %d ms\", id, timeout);\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        this.acks[id] = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, [null, ...args]);\n        };\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        debug(\"transport is open - connecting\");\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this.packet({ type: PacketType.CONNECT, data });\n            });\n        }\n        else {\n            this.packet({ type: PacketType.CONNECT, data: this.auth });\n        }\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        debug(\"close (%s)\", reason);\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    const id = packet.data.sid;\n                    this.onconnect(id);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        debug(\"emitting event %j\", args);\n        if (null != packet.id) {\n            debug(\"attaching ack callback to event\");\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            debug(\"sending ack %j\", args);\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            debug(\"calling ack %s with %j\", packet.id, packet.data);\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n            debug(\"bad ack %s\", packet.id);\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id) {\n        debug(\"socket connected with id %s\", id);\n        this.id = id;\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        debug(\"server disconnect (%s)\", this.nsp);\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually. In that case, the socket will not try to reconnect.\n     *\n     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   // console.log(reason); prints \"io client disconnect\"\n     * });\n     *\n     * socket.disconnect();\n     *\n     * @return self\n     */\n    disconnect() {\n        if (this.connected) {\n            debug(\"performing disconnect (%s)\", this.nsp);\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for {@link disconnect()}.\n     *\n     * @return self\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * socket.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @example\n     * socket.volatile.emit(\"hello\"); // the server may or may not receive it\n     *\n     * @returns self\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * @example\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     *\n     * @returns self\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @example\n     * socket.onAny((event, ...args) => {\n     *   console.log(`got ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @example\n     * socket.prependAny((event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * }\n     *\n     * socket.onAny(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAny(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAny();\n     *\n     * @param listener\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * }\n     *\n     * socket.onAnyOutgoing(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAnyOutgoing(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAnyOutgoing();\n     *\n     * @param [listener] - the catch-all listener (optional)\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, nextTick, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nimport debugModule from \"debug\"; // debug()\nconst debug = debugModule(\"socket.io-client:manager\"); // debug()\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        debug(\"readyState %s\", this._readyState);\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        debug(\"opening %s\", this.uri);\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        // emit `error`\n        const errorSub = on(socket, \"error\", (err) => {\n            debug(\"error\");\n            self.cleanup();\n            self._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                self.maybeReconnectOnOpen();\n            }\n        });\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            debug(\"connect attempt will timeout after %d\", timeout);\n            if (timeout === 0) {\n                openSubDestroy(); // prevents a race condition with the 'open' event\n            }\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                debug(\"connect attempt timed out after %d\", timeout);\n                openSubDestroy();\n                socket.close();\n                // @ts-ignore\n                socket.emit(\"error\", new Error(\"timeout\"));\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        debug(\"open\");\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\", e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n        nextTick(() => {\n            this.emitReserved(\"packet\", packet);\n        }, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        debug(\"error\", err);\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                debug(\"socket %s is still active, skipping close\", nsp);\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        debug(\"writing packet %j\", packet);\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        debug(\"cleanup\");\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        debug(\"disconnect\");\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        debug(\"closed due to %s\", reason);\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            debug(\"reconnect failed\");\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            debug(\"will wait %dms before reconnect attempt\", delay);\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                debug(\"attempting reconnect\");\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        debug(\"reconnect attempt error\");\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        debug(\"reconnect success\");\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\nimport debugModule from \"debug\"; // debug()\nconst debug = debugModule(\"socket.io-client\"); // debug()\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        debug(\"ignoring socket cache for %s\", source);\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            debug(\"new io instance for %s\", source);\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n"],"names":["PACKET_TYPES","Object","create","PACKET_TYPES_REVERSE","keys","forEach","key","ERROR_PACKET","type","data","withNativeBlob","Blob","prototype","toString","call","withNativeArrayBuffer","ArrayBuffer","encodePacket","supportsBinary","callback","encodeBlobAsBase64","obj","isView","buffer","fileReader","FileReader","onload","content","result","split","readAsDataURL","chars","lookup","Uint8Array","i","length","charCodeAt","decodePacket","encodedPacket","binaryType","mapBinary","charAt","decodeBase64Packet","substring","decoded","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","len","p","arraybuffer","bytes","decode","SEPARATOR","String","fromCharCode","Emitter","mixin","on","addEventListener","event","fn","this","_callbacks","push","once","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","cb","callbacks","splice","emit","args","Array","slice","emitReserved","listeners","hasListeners","globalThisShim","self","window","Function","pick","attr","reduce","acc","k","hasOwnProperty","NATIVE_SET_TIMEOUT","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","opts","useNativeTimers","setTimeoutFn","bind","globalThis","clearTimeoutFn","TransportError","Error","constructor","reason","description","context","super","Transport","writable","query","readyState","socket","onError","open","doOpen","close","doClose","onClose","send","packets","write","onOpen","onData","packet","onPacket","details","alphabet","map","prev","seed","encode","num","encoded","Math","floor","yeast","now","Date","str","encodeURIComponent","value","XMLHttpRequest","err","hasCORS","XHR","xdomain","e","concat","join","empty","hasXHR2","responseType","Request","uri","method","async","undefined","xd","xscheme","xs","xhr","extraHeaders","setDisableHeaderCheck","setRequestHeader","withCredentials","requestTimeout","timeout","onreadystatechange","status","onLoad","document","index","requestsCount","requests","cleanup","fromError","abort","responseText","attachEvent","unloadHandler","nextTick","Promise","resolve","then","WebSocket","MozWebSocket","isReactNative","navigator","product","toLowerCase","transports","websocket","forceBase64","name","check","protocols","headers","ws","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","lastPacket","schema","secure","port","Number","timestampRequests","timestampParam","b64","encodedQuery","hostname","indexOf","path","polling","location","isSSL","protocol","poll","pause","onPause","total","doPoll","encodedPayload","encodedPackets","decodedPacket","decodePayload","count","encodePayload","doWrite","sid","request","assign","req","xhrStatus","pollXhr","re","parts","parse","src","b","replace","m","exec","source","host","authority","ipv6uri","pathNames","regx","names","queryKey","$0","$1","$2","Socket","writeBuffer","prevBufferLen","agent","upgrade","rememberUpgrade","rejectUnauthorized","perMessageDeflate","threshold","transportOptions","closeOnBeforeunload","qs","qry","pairs","l","pair","decodeURIComponent","id","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","beforeunloadEventListener","transport","offlineEventListener","createTransport","EIO","priorWebsocketSuccess","shift","setTransport","onDrain","probe","failed","onTransportOpen","msg","upgrading","flush","freezeTransport","error","onTransportClose","onupgrade","to","onHandshake","JSON","resetPingTimeout","sendPacket","code","filterUpgrades","maxPayload","getWritablePackets","payloadSize","c","utf8Length","ceil","byteLength","size","options","compress","cleanupAndClose","waitForUpgrade","filteredUpgrades","j","s","h","d","w","y","ms","val","match","n","parseFloat","isFinite","long","msAbs","abs","plural","fmtLong","round","fmtShort","stringify","isPlural","common","env","createDebug","namespace","prevTime","namespacesCache","enabledCache","enableOverride","debug","enabled","curr","diff","coerce","unshift","format","formatter","formatters","formatArgs","log","useColors","color","selectColor","extend","destroy","defineProperty","enumerable","configurable","get","namespaces","set","v","init","delimiter","newDebug","toNamespace","regexp","default","stack","message","disable","skips","enable","save","RegExp","test","humanize","require$$0","console","warn","hash","colors","load","exports","module","lastC","storage","setItem","removeItem","r","getItem","process","DEBUG","__nwjs","userAgent","documentElement","style","WebkitAppearance","firebug","exception","table","parseInt","localStorage","localstorage","warned","debugModule","withNativeFile","File","isBinary","hasBinary","toJSON","isArray","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","placeholder","_placeholder","newData","reconstructPacket","_reconstructPacket","PacketType","Decoder","reviver","add","reconstructor","decodeString","BINARY_EVENT","BINARY_ACK","BinaryReconstructor","takeBinaryData","start","buf","nsp","next","payload","tryParse","substr","isPayloadValid","static","CONNECT","DISCONNECT","CONNECT_ERROR","EVENT","ACK","finishedReconstruction","reconPack","binData","replacer","encodeAsString","encodeAsBinary","deconstruction","RESERVED_EVENTS","freeze","connect","connect_error","disconnect","disconnecting","newListener","io","connected","receiveBuffer","sendBuffer","ids","acks","flags","auth","_autoConnect","disconnected","subEvents","subs","onpacket","active","_readyState","ack","pop","_registerAckCallback","isTransportWritable","engine","volatile","notifyOutgoingListeners","timer","_packet","onconnect","onevent","onack","ondisconnect","emitEvent","_anyListeners","listener","sent","emitBuffered","subDestroy","onAny","prependAny","offAny","listenersAny","onAnyOutgoing","_anyOutgoingListeners","prependAnyOutgoing","offAnyOutgoing","listenersAnyOutgoing","Backoff","min","max","factor","jitter","attempts","duration","pow","rand","random","deviation","reset","setMin","setMax","setJitter","Manager","_a","nsps","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","Encoder","decoder","autoConnect","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","maybeReconnectOnOpen","_reconnecting","reconnect","Engine","skipReconnect","openSubDestroy","errorSub","onping","ondata","ondecoded","_destroy","_close","delay","onreconnect","attempt","cache","parsed","loc","href","url","sameNamespace","forceNew","multiplex"],"mappings":"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"}