{"version":3,"file":"socket.io.min.js","sources":["../node_modules/engine.io-parser/build/esm/commons.js","../node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","../node_modules/engine.io-parser/build/esm/encodePacket.browser.js","../node_modules/engine.io-parser/build/esm/decodePacket.browser.js","../node_modules/engine.io-parser/build/esm/index.js","../node_modules/@socket.io/component-emitter/index.mjs","../node_modules/engine.io-client/build/esm/globalThis.browser.js","../node_modules/engine.io-client/build/esm/util.js","../node_modules/engine.io-client/build/esm/contrib/yeast.js","../node_modules/engine.io-client/build/esm/transport.js","../node_modules/engine.io-client/build/esm/contrib/parseqs.js","../node_modules/engine.io-client/build/esm/contrib/has-cors.js","../node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js","../node_modules/engine.io-client/build/esm/transports/polling.js","../node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js","../node_modules/engine.io-client/build/esm/transports/websocket.js","../node_modules/engine.io-client/build/esm/transports/index.js","../node_modules/engine.io-client/build/esm/contrib/parseuri.js","../node_modules/engine.io-client/build/esm/socket.js","../node_modules/engine.io-client/build/esm/index.js","../node_modules/ms/index.js","../node_modules/debug/src/common.js","../node_modules/debug/src/browser.js","../build/esm/url.js","../node_modules/socket.io-parser/build/esm/is-binary.js","../node_modules/socket.io-parser/build/esm/binary.js","../node_modules/socket.io-parser/build/esm/index.js","../build/esm/on.js","../build/esm/socket.js","../build/esm/contrib/backo2.js","../build/esm/manager.js","../build/esm/index.js"],"sourcesContent":["const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + content);\n    };\n    return fileReader.readAsDataURL(data);\n};\nexport default encodePacket;\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            return data instanceof ArrayBuffer ? new Blob([data]) : data;\n        case \"arraybuffer\":\n        default:\n            return data; // assuming the data is already an ArrayBuffer\n    }\n};\nexport default decodePacket;\n","import encodePacket from \"./encodePacket.js\";\nimport decodePacket from \"./decodePacket.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload };\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","import { globalThisShim as globalThis } from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n","// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nclass TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} options.\n     * @api private\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.readyState = \"\";\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @api protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     *\n     * @api public\n     */\n    open() {\n        if (\"closed\" === this.readyState || \"\" === this.readyState) {\n            this.readyState = \"opening\";\n            this.doOpen();\n        }\n        return this;\n    }\n    /**\n     * Closes the transport.\n     *\n     * @api public\n     */\n    close() {\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     * @api public\n     */\n    send(packets) {\n        if (\"open\" === this.readyState) {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @api protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @api protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @api protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @api protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n}\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","// browser shim for xmlhttprequest module\nimport { hasCORS } from \"../contrib/has-cors.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nexport function XHR(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nimport { XHR as XMLHttpRequest } from \"./xmlhttprequest.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false\n    });\n    return null != xhr.responseType;\n})();\nexport class Polling extends Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n            this.xs = opts.secure !== isSSL;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    /**\n     * Transport name.\n     */\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @api private\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} callback upon buffers are flushed and transport is paused\n     * @api private\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @api public\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @api private\n     */\n    onData(data) {\n        const callback = packet => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @api private\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} data packets\n     * @param {Function} drain callback\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, data => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        let port = \"\";\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"https\" === schema && Number(this.opts.port) !== 443) ||\n                (\"http\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @api private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @api private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @api private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @api public\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.async = false !== opts.async;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @api private\n     */\n    create() {\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        opts.xscheme = !!this.opts.xs;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, this.async);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @api private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @api private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @api private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @api public\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import { globalThisShim as globalThis } from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return cb => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { defaultBinaryType, nextTick, usingBrowserWebSocket, WebSocket } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @api {Object} connection options\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Transport name.\n     *\n     * @api public\n     */\n    get name() {\n        return \"websocket\";\n    }\n    /**\n     * Opens socket.\n     *\n     * @api private\n     */\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @api private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = closeEvent => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent\n        });\n        this.ws.onmessage = ev => this.onData(ev.data);\n        this.ws.onerror = e => this.onError(\"websocket error\", e);\n    }\n    /**\n     * Writes data to socket.\n     *\n     * @param {Array} array of packets.\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, data => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    /**\n     * Closes socket.\n     *\n     * @api private\n     */\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        let port = \"\";\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"wss\" === schema && Number(this.opts.port) !== 443) ||\n                (\"ws\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @api public\n     */\n    check() {\n        return !!WebSocket;\n    }\n}\n","import { Polling } from \"./polling.js\";\nimport { WS } from \"./websocket.js\";\nexport const transports = {\n    websocket: WS,\n    polling: Polling\n};\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses an URI\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri or options\n     * @param {Object} opts - options\n     * @api public\n     */\n    constructor(uri, opts = {}) {\n        super();\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parse(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\"polling\", \"websocket\"];\n        this.readyState = \"\";\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024\n            },\n            transportOptions: {},\n            closeOnBeforeunload: true\n        }, opts);\n        this.opts.path = this.opts.path.replace(/\\/$/, \"\") + \"/\";\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this.beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\"\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} transport name\n     * @return {Transport}\n     * @api private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts.transportOptions[name], this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port\n        });\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @api private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @api private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", reason => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} transport name\n     * @api private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", msg => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = err => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        transport.open();\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @api private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState &&\n            this.opts.upgrade &&\n            this.transport.pause) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @api private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.resetPingTimeout();\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @api private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @api private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @api private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @api private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} message.\n     * @param {Function} callback function.\n     * @param {Object} options.\n     * @return {Socket} for chaining.\n     * @api public\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @api private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     *\n     * @api public\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @api private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @api private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} server upgrades\n     * @api private\n     *\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\n","import { Socket } from \"./socket.js\";\nexport { Socket };\nexport const protocol = Socket.protocol;\nexport { Transport } from \"./transport.js\";\nexport { transports } from \"./transports/index.js\";\nexport { installTimerFunctions } from \"./util.js\";\nexport { parse } from \"./contrib/parseuri.js\";\nexport { nextTick } from \"./transports/websocket-constructor.js\";\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.slice(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n","import { parse } from \"engine.io-client\";\nimport debugModule from \"debug\"; // debug()\nconst debug = debugModule(\"socket.io-client:url\"); // debug()\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            debug(\"protocol-less url %s\", uri);\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        debug(\"parse %s\", uri);\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    packet.attachments = undefined; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                obj.type =\n                    obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK;\n                return this.encodeAsBinary(obj);\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            if (packet.type === PacketType.BINARY_EVENT ||\n                packet.type === PacketType.BINARY_ACK) {\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return typeof payload === \"object\";\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || typeof payload === \"object\";\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return Array.isArray(payload) && payload.length > 0;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nimport debugModule from \"debug\"; // debug()\nconst debug = debugModule(\"socket.io-client:socket\"); // debug()\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\n/**\n * A Socket is the fundamental class for interacting with the server.\n *\n * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.\n *\n * @example\n * const socket = io();\n *\n * socket.on(\"connect\", () => {\n *   console.log(\"connected\");\n * });\n *\n * // send an event to the server\n * socket.emit(\"foo\", \"bar\");\n *\n * socket.on(\"foobar\", () => {\n *   // an event was received from the server\n * });\n *\n * // upon disconnection\n * socket.on(\"disconnect\", (reason) => {\n *   console.log(`disconnected due to ${reason}`);\n * });\n */\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     */\n    constructor(io, nsp, opts) {\n        super();\n        /**\n         * Whether the socket is currently connected to the server.\n         *\n         * @example\n         * const socket = io();\n         *\n         * socket.on(\"connect\", () => {\n         *   console.log(socket.connected); // true\n         * });\n         *\n         * socket.on(\"disconnect\", () => {\n         *   console.log(socket.connected); // false\n         * });\n         */\n        this.connected = false;\n        /**\n         * Buffer for packets received before the CONNECT packet\n         */\n        this.receiveBuffer = [];\n        /**\n         * Buffer for packets that will be sent once the socket is connected\n         */\n        this.sendBuffer = [];\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"connect\", () => {\n     *   console.log(socket.disconnected); // false\n     * });\n     *\n     * socket.on(\"disconnect\", () => {\n     *   console.log(socket.disconnected); // true\n     * });\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects.\n     *\n     * @example\n     * const socket = io();\n     *\n     * console.log(socket.active); // true\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   if (reason === \"io server disconnect\") {\n     *     // the disconnection was initiated by the server, you need to manually reconnect\n     *     console.log(socket.active); // false\n     *   }\n     *   // else the socket will automatically try to reconnect\n     *   console.log(socket.active); // true\n     * });\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @example\n     * const socket = io({\n     *   autoConnect: false\n     * });\n     *\n     * socket.connect();\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for {@link connect()}.\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * socket.send(\"hello\");\n     *\n     * // this is equivalent to\n     * socket.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @example\n     * socket.emit(\"hello\", \"world\");\n     *\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\n     * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\n     *\n     * // with an acknowledgement from the server\n     * socket.emit(\"hello\", \"world\", (val) => {\n     *   // ...\n     * });\n     *\n     * @return self\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            debug(\"emitting packet with ack id %d\", id);\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n            debug(\"discard packet as the transport is not currently writable\");\n        }\n        else if (this.connected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        const timeout = this.flags.timeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    debug(\"removing packet with ack id %d from the buffer\", id);\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            debug(\"event with ack id %d has timed out after %d ms\", id, timeout);\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        this.acks[id] = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, [null, ...args]);\n        };\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        debug(\"transport is open - connecting\");\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this.packet({ type: PacketType.CONNECT, data });\n            });\n        }\n        else {\n            this.packet({ type: PacketType.CONNECT, data: this.auth });\n        }\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        debug(\"close (%s)\", reason);\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    const id = packet.data.sid;\n                    this.onconnect(id);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        debug(\"emitting event %j\", args);\n        if (null != packet.id) {\n            debug(\"attaching ack callback to event\");\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            debug(\"sending ack %j\", args);\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            debug(\"calling ack %s with %j\", packet.id, packet.data);\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n            debug(\"bad ack %s\", packet.id);\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id) {\n        debug(\"socket connected with id %s\", id);\n        this.id = id;\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        debug(\"server disconnect (%s)\", this.nsp);\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually. In that case, the socket will not try to reconnect.\n     *\n     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   // console.log(reason); prints \"io client disconnect\"\n     * });\n     *\n     * socket.disconnect();\n     *\n     * @return self\n     */\n    disconnect() {\n        if (this.connected) {\n            debug(\"performing disconnect (%s)\", this.nsp);\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for {@link disconnect()}.\n     *\n     * @return self\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * socket.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @example\n     * socket.volatile.emit(\"hello\"); // the server may or may not receive it\n     *\n     * @returns self\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * @example\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     *\n     * @returns self\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @example\n     * socket.onAny((event, ...args) => {\n     *   console.log(`got ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @example\n     * socket.prependAny((event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * }\n     *\n     * socket.onAny(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAny(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAny();\n     *\n     * @param listener\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * }\n     *\n     * socket.onAnyOutgoing(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAnyOutgoing(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAnyOutgoing();\n     *\n     * @param [listener] - the catch-all listener (optional)\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, nextTick, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nimport debugModule from \"debug\"; // debug()\nconst debug = debugModule(\"socket.io-client:manager\"); // debug()\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        debug(\"readyState %s\", this._readyState);\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        debug(\"opening %s\", this.uri);\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        // emit `error`\n        const errorSub = on(socket, \"error\", (err) => {\n            debug(\"error\");\n            self.cleanup();\n            self._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                self.maybeReconnectOnOpen();\n            }\n        });\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            debug(\"connect attempt will timeout after %d\", timeout);\n            if (timeout === 0) {\n                openSubDestroy(); // prevents a race condition with the 'open' event\n            }\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                debug(\"connect attempt timed out after %d\", timeout);\n                openSubDestroy();\n                socket.close();\n                // @ts-ignore\n                socket.emit(\"error\", new Error(\"timeout\"));\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        debug(\"open\");\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\", e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n        nextTick(() => {\n            this.emitReserved(\"packet\", packet);\n        }, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        debug(\"error\", err);\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                debug(\"socket %s is still active, skipping close\", nsp);\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        debug(\"writing packet %j\", packet);\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        debug(\"cleanup\");\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        debug(\"disconnect\");\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        debug(\"closed due to %s\", reason);\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            debug(\"reconnect failed\");\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            debug(\"will wait %dms before reconnect attempt\", delay);\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                debug(\"attempting reconnect\");\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        debug(\"reconnect attempt error\");\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        debug(\"reconnect success\");\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\nimport debugModule from \"debug\"; // debug()\nconst debug = debugModule(\"socket.io-client\"); // debug()\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        debug(\"ignoring socket cache for %s\", source);\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            debug(\"new io instance for %s\", source);\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n"],"names":["PACKET_TYPES","Object","create","PACKET_TYPES_REVERSE","keys","forEach","key","ERROR_PACKET","type","data","withNativeBlob","Blob","prototype","toString","call","withNativeArrayBuffer","ArrayBuffer","encodePacket","supportsBinary","callback","obj","encodeBlobAsBase64","isView","buffer","fileReader","FileReader","onload","content","result","split","readAsDataURL","chars","lookup","Uint8Array","i","length","charCodeAt","decodePacket","encodedPacket","binaryType","mapBinary","charAt","decodeBase64Packet","substring","decoded","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","len","p","arraybuffer","bytes","decode","SEPARATOR","String","fromCharCode","Emitter","mixin","on","addEventListener","event","fn","this","_callbacks","push","once","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","cb","callbacks","splice","emit","args","Array","slice","emitReserved","listeners","hasListeners","globalThisShim","self","window","Function","pick","_len","attr","_key","reduce","acc","k","hasOwnProperty","NATIVE_SET_TIMEOUT","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","opts","useNativeTimers","setTimeoutFn","bind","globalThis","clearTimeoutFn","prev","TransportError","reason","description","context","_this","_classCallCheck","_super","Error","Transport","_Emitter","_inherits","_super2","_createSuper","_this2","writable","_assertThisInitialized","query","readyState","socket","_createClass","value","_get","_getPrototypeOf","doOpen","doClose","onClose","packets","write","packet","onPacket","details","alphabet","map","seed","encode","num","encoded","Math","floor","yeast","now","Date","str","encodeURIComponent","qs","qry","pairs","l","pair","decodeURIComponent","XMLHttpRequest","err","hasCORS","XHR","xdomain","e","concat","join","empty","hasXHR2","responseType","Polling","_Transport","polling","location","isSSL","protocol","port","xd","hostname","xs","secure","forceBase64","get","poll","onPause","pause","total","doPoll","_this3","encodedPayload","encodedPackets","decodedPacket","decodePayload","onOpen","_this4","close","_this5","count","encodePayload","doWrite","schema","timestampRequests","timestampParam","sid","b64","Number","encodedQuery","indexOf","path","_extends","Request","uri","_this6","req","request","method","xhrStatus","onError","_this7","onData","pollXhr","_this8","async","undefined","_this9","xscheme","xhr","open","extraHeaders","setDisableHeaderCheck","setRequestHeader","withCredentials","requestTimeout","timeout","onreadystatechange","status","onLoad","send","document","index","requestsCount","requests","cleanup","fromError","abort","responseText","attachEvent","unloadHandler","nextTick","Promise","resolve","then","WebSocket","MozWebSocket","isReactNative","navigator","product","toLowerCase","WS","check","protocols","headers","ws","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","_loop","lastPacket","transports","websocket","re","parts","parse","src","b","replace","m","exec","source","host","authority","ipv6uri","pathNames","regx","names","queryKey","$0","$1","$2","Socket","writeBuffer","prevBufferLen","agent","upgrade","rememberUpgrade","rejectUnauthorized","perMessageDeflate","threshold","transportOptions","closeOnBeforeunload","id","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","beforeunloadEventListener","transport","offlineEventListener","name","EIO","priorWebsocketSuccess","createTransport","shift","setTransport","onDrain","failed","onTransportOpen","msg","upgrading","flush","freezeTransport","error","onTransportClose","onupgrade","to","probe","onHandshake","JSON","resetPingTimeout","sendPacket","code","filterUpgrades","maxPayload","getWritablePackets","payloadSize","c","utf8Length","ceil","byteLength","size","options","compress","cleanupAndClose","waitForUpgrade","filteredUpgrades","j","Socket$1","s","h","d","w","y","ms","val","match","n","parseFloat","isFinite","msAbs","abs","plural","fmtLong","round","fmtShort","stringify","isPlural","common","env","createDebug","namespace","prevTime","namespacesCache","enabledCache","enableOverride","debug","enabled","curr","diff","coerce","unshift","format","formatter","formatters","formatArgs","logFn","log","useColors","color","selectColor","extend","destroy","defineProperty","enumerable","configurable","namespaces","set","v","init","delimiter","newDebug","toNamespace","regexp","stack","message","disable","skips","enable","save","RegExp","test","humanize","require$$0","console","warn","hash","colors","load","warned","exports","module","lastC","storage","setItem","removeItem","r","getItem","process","DEBUG","__nwjs","userAgent","documentElement","style","WebkitAppearance","firebug","exception","table","parseInt","localStorage","localstorage","debugModule","withNativeFile","File","isBinary","hasBinary","toJSON","_typeof","isArray","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","placeholder","_placeholder","newData","reconstructPacket","_reconstructPacket","PacketType","Encoder","replacer","EVENT","ACK","encodeAsString","BINARY_EVENT","BINARY_ACK","encodeAsBinary","nsp","deconstruction","Decoder","reviver","reconstructor","decodeString","BinaryReconstructor","takeBinaryData","start","buf","next","payload","tryParse","substr","isPayloadValid","finishedReconstruction","CONNECT","DISCONNECT","CONNECT_ERROR","reconPack","binData","RESERVED_EVENTS","freeze","connect","connect_error","disconnect","disconnecting","newListener","io","connected","receiveBuffer","sendBuffer","ids","acks","flags","auth","_autoConnect","subs","onpacket","subEvents","_readyState","_len2","_key2","ack","pop","_registerAckCallback","isTransportWritable","engine","discardPacket","notifyOutgoingListeners","timer","_len3","_key3","_packet","onconnect","onevent","onack","ondisconnect","emitEvent","_anyListeners","_step","_iterator","_createForOfIteratorHelper","done","f","sent","_len4","_key4","emitBuffered","subDestroy","listener","_anyOutgoingListeners","_step2","_iterator2","Backoff","min","max","factor","jitter","attempts","duration","pow","rand","random","deviation","reset","setMin","setMax","setJitter","Manager","_a","nsps","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","decoder","autoConnect","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","_reconnecting","reconnect","Engine","skipReconnect","openSubDestroy","errorSub","maybeReconnectOnOpen","onping","ondata","ondecoded","add","_i","_nsps","active","_close","delay","onreconnect","attempt","cache","parsed","loc","href","url","sameNamespace","forceNew","multiplex"],"mappings":"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"}